//Minimum Spanning Tree

vector<int> key(n+1);
    vector<bool> mst(n+1);
    vector<int> parent(n+1);
    
    for(int i=1;i<=n;i++){
        key[i]=INT_MAX;
        mst[i]=false;
        parent[i]=-1;
    }
    
    key[1]=0;
    parent[1]=-1;
    
    for(int i=1;i<n;i++){
        int u;
        int mini=INT_MAX;
        for(int j=1;j<=n;j++){
            if(mst[j]==false && key[j]<mini){
                mini=key[j];
                u=j;
            }
        }
        mst[u]=true;
        for(auto x : adj[u]){
            int node=x.first;
            int wt=x.second;
            if(key[node]>wt && mst[node]==false){
                parent[node]=u;
                key[node]=wt;
            }
        }
        
    }
    vector<pair<pair<int, int>, int>> ans;
    for(int i=2;i<=n;i++){
        ans.push_back({{i,parent[i]},key[i]});
    }
    return ans;
